// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Participant {
  id        String   @id @default(uuid())
  name      String
  rfidTag   String   @unique
  createdAt DateTime @default(now())
  timings   Timing[]
}

model Checkpoint {
  id        String   @id @default(uuid())
  name      String
  location  String?
  createdAt DateTime @default(now())
  timings   Timing[]
}

model RaceEvent {
  id               String   @id @default(uuid())
  eventName        String
  description      String?
  mainImage        String?
  gallery          String[]
  organizer        String?
  contactPhone     String?
  contactEmail     String?
  organizerSite    String?
  registrationSite String?
  socialMedia      String?
  startLocation    String
  startDateTime    DateTime
  endDateTime      DateTime?
  competition      String?
  tags             String[]
  races            Race[]
}

model Race {
  id          String    @id @default(uuid())
  raceEventId String
  elevation   Float?
  length      Float
  gpsFile     String?
  raceEvent   RaceEvent  @relation(fields: [raceEventId], references: [id], onDelete: Cascade)
  timings     Timing[]
}

model Timing {
  id            String      @id @default(uuid())
  participantId String
  checkpointId  String
  raceId        String
  timestamp     DateTime    @default(now())
  participant   Participant @relation(fields: [participantId], references: [id], onDelete: Cascade)
  checkpoint    Checkpoint  @relation(fields: [checkpointId], references: [id], onDelete: Cascade)
  race          Race        @relation(fields: [raceId], references: [id], onDelete: Cascade)
}
